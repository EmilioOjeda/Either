{"interfaceLanguages":{"swift":[{"children":[{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/either\/apply(_:)-20a1u","title":"func apply<E, A, B>(Either<E, (A) -> B>) -> (Either<E, A>) -> Either<E, B>","type":"func"},{"path":"\/documentation\/either\/apply(_:)-7tct2","title":"func apply<E, A, B>(Either<E, KeyPath<A, B>>) -> (Either<E, A>) -> Either<E, B>","type":"func"},{"path":"\/documentation\/either\/apply(_:_:)-4cwyv","title":"func apply<E, A, B>(Either<E, KeyPath<A, B>>, Either<E, A>) -> Either<E, B>","type":"func"},{"path":"\/documentation\/either\/apply(_:_:)-4qour","title":"func apply<E, A, B>(Either<E, (A) -> B>, Either<E, A>) -> Either<E, B>","type":"func"},{"path":"\/documentation\/either\/fmap(_:)-33f","title":"func fmap<E, A, B>(KeyPath<A, B>) -> (Either<E, A>) -> Either<E, B>","type":"func"},{"path":"\/documentation\/either\/fmap(_:)-9m3ov","title":"func fmap<E, A, B>((A) -> B) -> (Either<E, A>) -> Either<E, B>","type":"func"},{"path":"\/documentation\/either\/fmap(_:_:)-17p8a","title":"func fmap<E, A, B>((A) -> B, Either<E, A>) -> Either<E, B>","type":"func"},{"path":"\/documentation\/either\/fmap(_:_:)-6pcbp","title":"func fmap<E, A, B>(KeyPath<A, B>, Either<E, A>) -> Either<E, B>","type":"func"},{"path":"\/documentation\/either\/pure(_:)","title":"func pure<E, A>(A) -> Either<E, A>","type":"func"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/either\/either\/left(_:)","title":"case left(E)","type":"case"},{"path":"\/documentation\/either\/either\/right(_:)","title":"case right(A)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/either\/either\/isleft","title":"var isLeft: Bool","type":"property"},{"path":"\/documentation\/either\/either\/isright","title":"var isRight: Bool","type":"property"},{"path":"\/documentation\/either\/either\/left","title":"var left: E?","type":"property"},{"path":"\/documentation\/either\/either\/right","title":"var right: A?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/either\/either\/apply(_:)-4hpc5","title":"func apply<B>(Either<E, KeyPath<A, B>>) -> Either<E, B>","type":"method"},{"path":"\/documentation\/either\/either\/apply(_:)-7sqb0","title":"func apply<B>(Either<E, (A) -> B>) -> Either<E, B>","type":"method"},{"path":"\/documentation\/either\/either\/bimap(_:_:)-4hfc1","title":"func bimap<F, B>((E) throws -> F, KeyPath<A, B>) rethrows -> Either<F, B>","type":"method"},{"path":"\/documentation\/either\/either\/bimap(_:_:)-7fvu","title":"func bimap<F, B>(KeyPath<E, F>, KeyPath<A, B>) -> Either<F, B>","type":"method"},{"path":"\/documentation\/either\/either\/bimap(_:_:)-7vb3g","title":"func bimap<F, B>((E) throws -> F, (A) throws -> B) rethrows -> Either<F, B>","type":"method"},{"path":"\/documentation\/either\/either\/bimap(_:_:)-9rpuu","title":"func bimap<F, B>(KeyPath<E, F>, (A) throws -> B) rethrows -> Either<F, B>","type":"method"},{"path":"\/documentation\/either\/either\/contains(_:)","title":"func contains(A) -> Bool","type":"method"},{"path":"\/documentation\/either\/either\/debug()","title":"func debug() -> Either<E, A>","type":"method"},{"path":"\/documentation\/either\/either\/debug(_:separator:terminator:)","title":"func debug(Any..., separator: String, terminator: String) -> Either<E, A>","type":"method"},{"path":"\/documentation\/either\/either\/filter(by:or:)-4ftrj","title":"func filter(by: (A) throws -> Bool, or: () throws -> E) rethrows -> Either<E, A>","type":"method"},{"path":"\/documentation\/either\/either\/filter(by:or:)-4wcz4","title":"func filter(by: KeyPath<A, Bool>, or: () -> E) -> Either<E, A>","type":"method"},{"path":"\/documentation\/either\/either\/flatmap(_:)","title":"func flatMap<B>((A) throws -> Either<E, B>) rethrows -> Either<E, B>","type":"method"},{"path":"\/documentation\/either\/either\/flatmaperror(_:)","title":"func flatMapError<F>((E) -> Either<F, A>) -> Either<F, A>","type":"method"},{"path":"\/documentation\/either\/either\/flatten()","title":"func flatten<B>() -> Either<E, B>","type":"method"},{"path":"\/documentation\/either\/either\/fold(_:_:)-2jjt2","title":"func fold<Value>((E) throws -> Value, KeyPath<A, Value>) rethrows -> Value","type":"method"},{"path":"\/documentation\/either\/either\/fold(_:_:)-4rk41","title":"func fold<Value>((E) throws -> Value, (A) throws -> Value) rethrows -> Value","type":"method"},{"path":"\/documentation\/either\/either\/fold(_:_:)-7nmzk","title":"func fold<Value>(KeyPath<E, Value>, (A) throws -> Value) rethrows -> Value","type":"method"},{"path":"\/documentation\/either\/either\/fold(_:_:)-ithp","title":"func fold<Value>(KeyPath<E, Value>, KeyPath<A, Value>) -> Value","type":"method"},{"path":"\/documentation\/either\/either\/forall(_:)","title":"func forAll((A.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/either\/either\/foreach(_:)","title":"func forEach((A.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/either\/either\/getorelse(_:)","title":"func getOrElse(() throws -> A) rethrows -> A","type":"method"},{"path":"\/documentation\/either\/either\/getorthrow()","title":"func getOrThrow() throws -> A","type":"method"},{"path":"\/documentation\/either\/either\/getorthrow(_:)","title":"func getOrThrow(() -> some Error) throws -> A","type":"method"},{"path":"\/documentation\/either\/either\/joinleft()","title":"func joinLeft<F>() -> Either<F, A>","type":"method"},{"path":"\/documentation\/either\/either\/joinright()","title":"func joinRight<B>() -> Either<E, B>","type":"method"},{"path":"\/documentation\/either\/either\/map(_:)-7lg0q","title":"func map<B>((A) throws -> B) rethrows -> Either<E, B>","type":"method"},{"path":"\/documentation\/either\/either\/map(_:)-9tm7h","title":"func map<B>(KeyPath<A, B>) -> Either<E, B>","type":"method"},{"path":"\/documentation\/either\/either\/maperror(_:)-8rkp2","title":"func mapError<F>((E) -> F) -> Either<F, A>","type":"method"},{"path":"\/documentation\/either\/either\/maperror(_:)-ctqg","title":"func mapError<F>(KeyPath<E, F>) -> Either<F, A>","type":"method"},{"path":"\/documentation\/either\/either\/merge()","title":"func merge() -> A","type":"method"},{"path":"\/documentation\/either\/either\/orelse(_:)","title":"func orElse(Either<E, A>) -> Either<E, A>","type":"method"},{"path":"\/documentation\/either\/either\/swap()","title":"func swap() -> Either<A, E>","type":"method"},{"path":"\/documentation\/either\/either\/then(_:)","title":"func then((A) throws -> Void) rethrows -> Either<E, A>","type":"method"},{"path":"\/documentation\/either\/either\/toarray()","title":"func toArray() -> [A]","type":"method"},{"path":"\/documentation\/either\/either\/tooptional()","title":"func toOptional() -> A?","type":"method"},{"path":"\/documentation\/either\/either\/toresult()","title":"func toResult() -> Result<A, E>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/either\/either\/error(_:)","title":"static func error(E) -> Either<E, A>","type":"method"},{"path":"\/documentation\/either\/either\/if(_:then:else:)","title":"static func `if`(() -> Bool, then: () -> A, else: () -> E) -> Either<E, A>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/either\/either\/'...(_:)-4yon3","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/either\/either\/'...(_:)-89b7s","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/either\/either\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/either\/either\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/either\/either\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/either\/either\/_(_:_:)-5zo3m","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/either\/either\/_(_:_:)-8vygd","title":"static func < (Either<E, A>, Either<E, A>) -> Bool","type":"op"},{"path":"\/documentation\/either\/either\/_=(_:_:)-3me6z","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/either\/either\/_=(_:_:)-8m04l","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/either\/either\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/either\/either\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/either\/either\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/either\/either\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/either\/either\/halfwidthcornerquoted","title":"var halfWidthCornerQuoted: String","type":"property"}],"path":"\/documentation\/either\/either\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/either\/either\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/either\/either\/==(_:_:)","title":"static func == (Either<E, A>, Either<E, A>) -> Bool","type":"op"}],"path":"\/documentation\/either\/either\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/either\/either","title":"Either","type":"enum"}],"path":"\/documentation\/either","title":"Either","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}