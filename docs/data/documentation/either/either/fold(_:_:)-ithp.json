{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Indistinctly the case for having a value on either left-hand or right-hand sides, it folds both projections into a single type."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fold"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"onLeftKeyPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"onRightKeyPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Value"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The folded value after getting it from the ket-path for either case."}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The key-path for the left-hand side."}]}],"name":"onLeftKeyPath"},{"content":[{"inlineContent":[{"type":"text","text":"The key-path for the right-hand side."}],"type":"paragraph"}],"name":"onRightKeyPath"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"It zooms-in and get the value of the "},{"type":"codeVoice","code":"onLeftKeyPath"},{"type":"text","text":" if this is a "},{"type":"codeVoice","code":"left"},{"type":"text","text":", or of the "},{"type":"codeVoice","code":"onRightKeyPath"},{"type":"text","text":" if this is a "},{"type":"codeVoice","code":"right"},{"type":"text","text":"."}],"type":"paragraph"}]}],"sections":[],"metadata":{"title":"fold(_:_:)","externalID":"s:6EitherAAO4foldyqd__s7KeyPathCyxqd__G_AEyq_qd__GtlF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fold"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Value"}],"roleHeading":"Instance Method","symbolKind":"method","extendedModule":"Either","role":"symbol","modules":[{"name":"Either"}]},"hierarchy":{"paths":[["doc:\/\/Either\/documentation\/Either","doc:\/\/Either\/documentation\/Either\/Either"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/either\/either\/fold(_:_:)-ithp"]}],"identifier":{"url":"doc:\/\/Either\/documentation\/Either\/Either\/fold(_:_:)-ithp","interfaceLanguage":"swift"},"references":{"doc://Either/documentation/Either/Either":{"abstract":[{"type":"codeVoice","code":"Either"},{"text":" represents a value of one of two possible types (a disjoint union). An instance of ","type":"text"},{"type":"codeVoice","code":"Either"},{"text":" is an instance of either ","type":"text"},{"type":"codeVoice","code":"left"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"right"},{"text":".","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Either","kind":"identifier"}],"type":"topic","role":"symbol","title":"Either","kind":"symbol","url":"\/documentation\/either\/either","navigatorTitle":[{"text":"Either","kind":"identifier"}],"identifier":"doc:\/\/Either\/documentation\/Either\/Either"},"doc://Either/documentation/Either":{"type":"topic","url":"\/documentation\/either","title":"Either","identifier":"doc:\/\/Either\/documentation\/Either","abstract":[],"kind":"symbol","role":"collection"},"doc://Either/documentation/Either/Either/fold(_:_:)-ithp":{"type":"topic","url":"\/documentation\/either\/either\/fold(_:_:)-ithp","title":"fold(_:_:)","identifier":"doc:\/\/Either\/documentation\/Either\/Either\/fold(_:_:)-ithp","abstract":[{"type":"text","text":"Indistinctly the case for having a value on either left-hand or right-hand sides, it folds both projections into a single type."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fold","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol"}}}