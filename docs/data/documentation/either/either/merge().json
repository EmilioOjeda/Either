{"kind":"symbol","metadata":{"extendedModule":"Either","conformance":{"constraints":[{"code":"E","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"A","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"A"}],"externalID":"s:6EitherAAOAAq_RszrlE5mergexyF","role":"symbol","modules":[{"name":"Either"}],"title":"merge()"},"variants":[{"paths":["\/documentation\/either\/either\/merge()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"abstract":[{"text":"It allows a ","type":"text"},{"code":"merge","type":"codeVoice"},{"text":" operation when both sides are of the same type.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Either\/documentation\/Either","doc:\/\/Either\/documentation\/Either\/Either"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"A","kind":"typeIdentifier"}]}]},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value result of the "},{"code":"merge","type":"codeVoice"},{"type":"text","text":" operation."}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most close Swift’s implementation based on Scala’s "},{"type":"codeVoice","code":"MergeableEither[A]"},{"type":"text","text":" constructor, would be when left and right hand sides are of the same type."},{"type":"text","text":" "},{"type":"text","text":"This means that "},{"type":"codeVoice","code":"Either<E, A>"},{"type":"text","text":" is implicitely equals than "},{"type":"codeVoice","code":"Either<A, A>"},{"type":"text","text":"."}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Either\/documentation\/Either\/Either\/merge()"},"references":{"doc://Either/documentation/Either":{"type":"topic","url":"\/documentation\/either","title":"Either","identifier":"doc:\/\/Either\/documentation\/Either","abstract":[],"kind":"symbol","role":"collection"},"doc://Either/documentation/Either/Either":{"abstract":[{"type":"codeVoice","code":"Either"},{"text":" represents a value of one of two possible types (a disjoint union). An instance of ","type":"text"},{"type":"codeVoice","code":"Either"},{"text":" is an instance of either ","type":"text"},{"type":"codeVoice","code":"left"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"right"},{"text":".","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Either","kind":"identifier"}],"type":"topic","role":"symbol","title":"Either","kind":"symbol","url":"\/documentation\/either\/either","navigatorTitle":[{"text":"Either","kind":"identifier"}],"identifier":"doc:\/\/Either\/documentation\/Either\/Either"},"doc://Either/documentation/Either/Either/merge()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"A"}],"kind":"symbol","abstract":[{"text":"It allows a ","type":"text"},{"code":"merge","type":"codeVoice"},{"text":" operation when both sides are of the same type.","type":"text"}],"url":"\/documentation\/either\/either\/merge()","role":"symbol","type":"topic","title":"merge()","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"E"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"A"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/Either\/documentation\/Either\/Either\/merge()"}}}